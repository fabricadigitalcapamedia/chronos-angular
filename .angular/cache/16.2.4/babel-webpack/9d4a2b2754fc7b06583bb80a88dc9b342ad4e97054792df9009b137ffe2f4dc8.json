{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass SidebarService {\n  constructor() {\n    this.menu = [{\n      titulo: 'Configuracion',\n      icon: 'nav-icon fas fa-tachometer-alt',\n      submenu: [{\n        titulo: 'Estimacion',\n        url: 'estimaciones',\n        icon: 'fa fa-users'\n      }, {\n        titulo: 'Hallazgos',\n        url: 'hallazgos',\n        icon: 'fa fa-cubes'\n      }]\n    }, {\n      titulo: 'Prueba',\n      icon: 'nav-icon fas fa-tachometer-alt',\n      submenu: [{\n        titulo: 'Estimacion',\n        url: 'estimaciones',\n        icon: 'fa fa-users'\n      }, {\n        titulo: 'Hallazgos',\n        url: 'hallazgos',\n        icon: 'fa fa-cubes'\n      }]\n    }];\n    this.data = [{\n      id: 1,\n      titulo: 'Configuracion',\n      icon: 'nav-icon fas fa-tachometer-alt',\n      idparent: null,\n      path: null\n    }, {\n      id: 2,\n      titulo: 'Estimación',\n      icon: 'fa fa-users',\n      idparent: 1,\n      path: 'estimaciones'\n    }, {\n      id: 3,\n      titulo: 'Hallazgos',\n      icon: 'fa fa-cubes',\n      idparent: 1,\n      path: 'hallazgos'\n    }, {\n      id: 4,\n      titulo: 'Prueba',\n      icon: 'nav-icon fas fa-tachometer-alt',\n      idparent: null,\n      path: null\n    }, {\n      id: 5,\n      titulo: 'Elfer',\n      icon: 'fa fa-users',\n      idparent: 4,\n      path: null\n    }, {\n      id: 6,\n      titulo: 'Hallazgos',\n      icon: 'fa fa-cubes',\n      idparent: 5,\n      path: 'hallazgos'\n    }, {\n      id: 7,\n      titulo: 'Eestimaciones',\n      icon: 'fa fa-users',\n      idparent: 4,\n      path: 'estimaciones'\n    }, {\n      id: 8,\n      titulo: 'Seguridad',\n      icon: 'nav-icon fas fa-tachometer-alt',\n      idparent: null,\n      path: 'estimaciones'\n    }];\n  }\n  ejecutar() {\n    const idToElementMap = {};\n    this.data.forEach(element => {\n      idToElementMap[element.id] = {\n        ...element,\n        hijos: []\n      };\n    });\n    // Construir el árbol\n    const arbolMenu = [];\n    this.data.forEach(element => {\n      if (element.idparent === null) {\n        arbolMenu.push(idToElementMap[element.id]);\n      } else {\n        idToElementMap[element.idparent].hijos.push(idToElementMap[element.id]);\n      }\n    });\n    return arbolMenu;\n  }\n  transformToNestedJSON(data) {\n    const tree = [];\n    data.forEach(item => {\n      const pathArray = item.path ? item.path.split(',') : [];\n      let currentLevel = tree;\n      pathArray.forEach((id, index) => {\n        if (!currentLevel[id]) {\n          currentLevel[id] = {\n            titulo: item.titulo,\n            icono: item.icono,\n            submenu: []\n          };\n          if (index < pathArray.length - 1) {\n            currentLevel[id].submenu = [];\n          }\n        }\n        currentLevel = currentLevel[id].submenu;\n      });\n    });\n    console.log('eee', tree);\n    return Object.values(tree);\n  }\n  static #_ = this.ɵfac = function SidebarService_Factory(t) {\n    return new (t || SidebarService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SidebarService,\n    factory: SidebarService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { SidebarService };","map":{"version":3,"names":["SidebarService","constructor","menu","titulo","icon","submenu","url","data","id","idparent","path","ejecutar","idToElementMap","forEach","element","hijos","arbolMenu","push","transformToNestedJSON","tree","item","pathArray","split","currentLevel","index","icono","length","console","log","Object","values","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Claro\\chronos-angular\\src\\app\\shared\\services\\sidebar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n  menu: any[] = [{\n    titulo: 'Configuracion',\n    icon: 'nav-icon fas fa-tachometer-alt',\n    submenu: [\n      { titulo: 'Estimacion', url: 'estimaciones', icon: 'fa fa-users' },\n      { titulo: 'Hallazgos', url: 'hallazgos', icon: 'fa fa-cubes' }\n    ]\n  }, {\n    titulo: 'Prueba',\n    icon: 'nav-icon fas fa-tachometer-alt',\n    submenu: [\n      { titulo: 'Estimacion', url: 'estimaciones', icon: 'fa fa-users' },\n      { titulo: 'Hallazgos', url: 'hallazgos', icon: 'fa fa-cubes' }\n    ]\n  }]\n\n\n  data = [\n    { id: 1, titulo: 'Configuracion', icon: 'nav-icon fas fa-tachometer-alt', idparent: null,path: null  },\n    { id: 2, titulo: 'Estimación', icon: 'fa fa-users', idparent: 1, path: 'estimaciones' },\n    { id: 3, titulo: 'Hallazgos', icon: 'fa fa-cubes', idparent: 1, path: 'hallazgos' },\n    { id: 4, titulo: 'Prueba', icon: 'nav-icon fas fa-tachometer-alt', idparent: null,path: null },\n    { id: 5, titulo: 'Elfer', icon: 'fa fa-users', idparent: 4, path: null },\n    { id: 6, titulo: 'Hallazgos', icon: 'fa fa-cubes', idparent: 5, path: 'hallazgos' },\n    { id: 7, titulo: 'Eestimaciones', icon: 'fa fa-users', idparent: 4, path: 'estimaciones' },\n    { id: 8, titulo: 'Seguridad', icon: 'nav-icon fas fa-tachometer-alt', idparent: null,path: 'estimaciones'  },\n  ];\n   \n  constructor() { }\n\n  ejecutar() {\n    const idToElementMap: any = {};\n    this.data.forEach(element => {\n      idToElementMap[element.id] = { ...element, hijos: [] };\n    });\n    // Construir el árbol\n    const arbolMenu: any = [];\n    this.data.forEach(element => {\n      if (element.idparent === null) {\n        arbolMenu.push(idToElementMap[element.id]);\n      } else {\n        idToElementMap[element.idparent].hijos.push(idToElementMap[element.id]);\n      }\n    });\n\n    return arbolMenu\n  }\n\n\n  transformToNestedJSON(data: any[]): any[] {\n    const tree: any = [];\n    data.forEach(item => {\n      const pathArray = item.path ? item.path.split(',') : [];\n      let currentLevel = tree;\n      pathArray.forEach((id: any, index: any) => {\n        if (!currentLevel[id]) {\n          currentLevel[id] = { titulo: item.titulo, icono: item.icono, submenu: [] };\n          if (index < pathArray.length - 1) {\n            currentLevel[id].submenu = [];\n          }\n        }\n        currentLevel = currentLevel[id].submenu;\n      });\n    });\n    console.log('eee', tree)\n    return Object.values(tree);\n  }\n}\n"],"mappings":";AAEA,MAGaA,cAAc;EA6BzBC,YAAA;IA5BA,KAAAC,IAAI,GAAU,CAAC;MACbC,MAAM,EAAE,eAAe;MACvBC,IAAI,EAAE,gCAAgC;MACtCC,OAAO,EAAE,CACP;QAAEF,MAAM,EAAE,YAAY;QAAEG,GAAG,EAAE,cAAc;QAAEF,IAAI,EAAE;MAAa,CAAE,EAClE;QAAED,MAAM,EAAE,WAAW;QAAEG,GAAG,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAa,CAAE;KAEjE,EAAE;MACDD,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,gCAAgC;MACtCC,OAAO,EAAE,CACP;QAAEF,MAAM,EAAE,YAAY;QAAEG,GAAG,EAAE,cAAc;QAAEF,IAAI,EAAE;MAAa,CAAE,EAClE;QAAED,MAAM,EAAE,WAAW;QAAEG,GAAG,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAa,CAAE;KAEjE,CAAC;IAGF,KAAAG,IAAI,GAAG,CACL;MAAEC,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,eAAe;MAAEC,IAAI,EAAE,gCAAgC;MAAEK,QAAQ,EAAE,IAAI;MAACC,IAAI,EAAE;IAAI,CAAG,EACtG;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,YAAY;MAAEC,IAAI,EAAE,aAAa;MAAEK,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAE,EACvF;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,WAAW;MAAEC,IAAI,EAAE,aAAa;MAAEK,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAE,EACnF;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE,gCAAgC;MAAEK,QAAQ,EAAE,IAAI;MAACC,IAAI,EAAE;IAAI,CAAE,EAC9F;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,OAAO;MAAEC,IAAI,EAAE,aAAa;MAAEK,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAI,CAAE,EACxE;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,WAAW;MAAEC,IAAI,EAAE,aAAa;MAAEK,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAE,EACnF;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,eAAe;MAAEC,IAAI,EAAE,aAAa;MAAEK,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAE,EAC1F;MAAEF,EAAE,EAAE,CAAC;MAAEL,MAAM,EAAE,WAAW;MAAEC,IAAI,EAAE,gCAAgC;MAAEK,QAAQ,EAAE,IAAI;MAACC,IAAI,EAAE;IAAc,CAAG,CAC7G;EAEe;EAEhBC,QAAQA,CAAA;IACN,MAAMC,cAAc,GAAQ,EAAE;IAC9B,IAAI,CAACL,IAAI,CAACM,OAAO,CAACC,OAAO,IAAG;MAC1BF,cAAc,CAACE,OAAO,CAACN,EAAE,CAAC,GAAG;QAAE,GAAGM,OAAO;QAAEC,KAAK,EAAE;MAAE,CAAE;IACxD,CAAC,CAAC;IACF;IACA,MAAMC,SAAS,GAAQ,EAAE;IACzB,IAAI,CAACT,IAAI,CAACM,OAAO,CAACC,OAAO,IAAG;MAC1B,IAAIA,OAAO,CAACL,QAAQ,KAAK,IAAI,EAAE;QAC7BO,SAAS,CAACC,IAAI,CAACL,cAAc,CAACE,OAAO,CAACN,EAAE,CAAC,CAAC;OAC3C,MAAM;QACLI,cAAc,CAACE,OAAO,CAACL,QAAQ,CAAC,CAACM,KAAK,CAACE,IAAI,CAACL,cAAc,CAACE,OAAO,CAACN,EAAE,CAAC,CAAC;;IAE3E,CAAC,CAAC;IAEF,OAAOQ,SAAS;EAClB;EAGAE,qBAAqBA,CAACX,IAAW;IAC/B,MAAMY,IAAI,GAAQ,EAAE;IACpBZ,IAAI,CAACM,OAAO,CAACO,IAAI,IAAG;MAClB,MAAMC,SAAS,GAAGD,IAAI,CAACV,IAAI,GAAGU,IAAI,CAACV,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;MACvD,IAAIC,YAAY,GAAGJ,IAAI;MACvBE,SAAS,CAACR,OAAO,CAAC,CAACL,EAAO,EAAEgB,KAAU,KAAI;QACxC,IAAI,CAACD,YAAY,CAACf,EAAE,CAAC,EAAE;UACrBe,YAAY,CAACf,EAAE,CAAC,GAAG;YAAEL,MAAM,EAAEiB,IAAI,CAACjB,MAAM;YAAEsB,KAAK,EAAEL,IAAI,CAACK,KAAK;YAAEpB,OAAO,EAAE;UAAE,CAAE;UAC1E,IAAImB,KAAK,GAAGH,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;YAChCH,YAAY,CAACf,EAAE,CAAC,CAACH,OAAO,GAAG,EAAE;;;QAGjCkB,YAAY,GAAGA,YAAY,CAACf,EAAE,CAAC,CAACH,OAAO;MACzC,CAAC,CAAC;IACJ,CAAC,CAAC;IACFsB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAET,IAAI,CAAC;IACxB,OAAOU,MAAM,CAACC,MAAM,CAACX,IAAI,CAAC;EAC5B;EAAC,QAAAY,CAAA,G;qBAnEU/B,cAAc;EAAA;EAAA,QAAAgC,EAAA,G;WAAdhC,cAAc;IAAAiC,OAAA,EAAdjC,cAAc,CAAAkC,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEPnC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}