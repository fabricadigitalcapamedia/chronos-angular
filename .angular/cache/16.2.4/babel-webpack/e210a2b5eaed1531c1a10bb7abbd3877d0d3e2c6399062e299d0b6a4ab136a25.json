{"ast":null,"code":"/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java (but not really).\n *\n * <h3>Example:</h3>\n * <pre>\n *  const logging = require('log4js');\n *  const log = logging.getLogger('some-category');\n *\n *  //call the log\n *  log.trace('trace me' );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * Website: http://log4js.berlios.de\n */\nconst debug = require('debug')('log4js:main');\nconst fs = require('fs');\nconst deepClone = require('rfdc')({\n  proto: true\n});\nconst configuration = require('./configuration');\nconst layouts = require('./layouts');\nconst levels = require('./levels');\nconst appenders = require('./appenders');\nconst categories = require('./categories');\nconst Logger = require('./logger');\nconst clustering = require('./clustering');\nconst connectLogger = require('./connect-logger');\nconst recordingModule = require('./appenders/recording');\nlet enabled = false;\nfunction sendLogEventToAppender(logEvent) {\n  if (!enabled) return;\n  debug('Received log event ', logEvent);\n  const categoryAppenders = categories.appendersForCategory(logEvent.categoryName);\n  categoryAppenders.forEach(appender => {\n    appender(logEvent);\n  });\n}\nfunction loadConfigurationFile(filename) {\n  debug(`Loading configuration from ${filename}`);\n  try {\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\n  } catch (e) {\n    throw new Error(`Problem reading config from file \"${filename}\". Error was ${e.message}`, e);\n  }\n}\nfunction configure(configurationFileOrObject) {\n  if (enabled) {\n    // eslint-disable-next-line no-use-before-define\n    shutdown();\n  }\n  let configObject = configurationFileOrObject;\n  if (typeof configObject === 'string') {\n    configObject = loadConfigurationFile(configurationFileOrObject);\n  }\n  debug(`Configuration is ${configObject}`);\n  configuration.configure(deepClone(configObject));\n  clustering.onMessage(sendLogEventToAppender);\n  enabled = true;\n\n  // eslint-disable-next-line no-use-before-define\n  return log4js;\n}\nfunction isConfigured() {\n  return enabled;\n}\nfunction recording() {\n  return recordingModule;\n}\n\n/**\n * This callback type is called `shutdownCallback` and is displayed as a global symbol.\n *\n * @callback shutdownCallback\n * @param {Error} [error]\n */\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @param {shutdownCallback} [callback] - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n */\nfunction shutdown(callback = () => {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('Invalid callback passed to shutdown');\n  }\n  debug('Shutdown called. Disabling all log writing.');\n  // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n  enabled = false;\n\n  // Clone out to maintain a reference\n  const appendersToCheck = Array.from(appenders.values());\n\n  // Reset immediately to prevent leaks\n  appenders.init();\n  categories.init();\n\n  // Count the number of shutdown functions\n  const shutdownFunctions = appendersToCheck.reduce((accum, next) => next.shutdown ? accum + 1 : accum, 0);\n  if (shutdownFunctions === 0) {\n    debug('No appenders with shutdown functions found.');\n    callback();\n  }\n  let completed = 0;\n  let error;\n  debug(`Found ${shutdownFunctions} appenders with shutdown functions.`);\n  function complete(err) {\n    error = error || err;\n    completed += 1;\n    debug(`Appender shutdowns complete: ${completed} / ${shutdownFunctions}`);\n    if (completed >= shutdownFunctions) {\n      debug('All shutdown functions completed.');\n      callback(error);\n    }\n  }\n\n  // Call each of the shutdown functions\n  appendersToCheck.filter(a => a.shutdown).forEach(a => a.shutdown(complete));\n}\n\n/**\n * Get a logger instance.\n * @static\n * @param {string} [category=default]\n * @return {Logger} instance of logger for the category\n */\nfunction getLogger(category) {\n  if (!enabled) {\n    configure(process.env.LOG4JS_CONFIG || {\n      appenders: {\n        out: {\n          type: 'stdout'\n        }\n      },\n      categories: {\n        default: {\n          appenders: ['out'],\n          level: 'OFF'\n        }\n      }\n    });\n  }\n  return new Logger(category || 'default');\n}\n\n/**\n * @name log4js\n * @namespace Log4js\n * @property getLogger\n * @property configure\n * @property shutdown\n */\nconst log4js = {\n  getLogger,\n  configure,\n  isConfigured,\n  shutdown,\n  connectLogger,\n  levels,\n  addLayout: layouts.addLayout,\n  recording\n};\nmodule.exports = log4js;","map":{"version":3,"names":["debug","require","fs","deepClone","proto","configuration","layouts","levels","appenders","categories","Logger","clustering","connectLogger","recordingModule","enabled","sendLogEventToAppender","logEvent","categoryAppenders","appendersForCategory","categoryName","forEach","appender","loadConfigurationFile","filename","JSON","parse","readFileSync","e","Error","message","configure","configurationFileOrObject","shutdown","configObject","onMessage","log4js","isConfigured","recording","callback","TypeError","appendersToCheck","Array","from","values","init","shutdownFunctions","reduce","accum","next","completed","error","complete","err","filter","a","getLogger","category","process","env","LOG4JS_CONFIG","out","type","default","level","addLayout","module","exports"],"sources":["C:/Claro/chronos-angular/node_modules/log4js/lib/log4js.js"],"sourcesContent":["/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java (but not really).\n *\n * <h3>Example:</h3>\n * <pre>\n *  const logging = require('log4js');\n *  const log = logging.getLogger('some-category');\n *\n *  //call the log\n *  log.trace('trace me' );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * Website: http://log4js.berlios.de\n */\nconst debug = require('debug')('log4js:main');\nconst fs = require('fs');\nconst deepClone = require('rfdc')({ proto: true });\nconst configuration = require('./configuration');\nconst layouts = require('./layouts');\nconst levels = require('./levels');\nconst appenders = require('./appenders');\nconst categories = require('./categories');\nconst Logger = require('./logger');\nconst clustering = require('./clustering');\nconst connectLogger = require('./connect-logger');\nconst recordingModule = require('./appenders/recording');\n\nlet enabled = false;\n\nfunction sendLogEventToAppender(logEvent) {\n  if (!enabled) return;\n  debug('Received log event ', logEvent);\n  const categoryAppenders = categories.appendersForCategory(\n    logEvent.categoryName\n  );\n  categoryAppenders.forEach((appender) => {\n    appender(logEvent);\n  });\n}\n\nfunction loadConfigurationFile(filename) {\n  debug(`Loading configuration from ${filename}`);\n  try {\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\n  } catch (e) {\n    throw new Error(\n      `Problem reading config from file \"${filename}\". Error was ${e.message}`,\n      e\n    );\n  }\n}\n\nfunction configure(configurationFileOrObject) {\n  if (enabled) {\n    // eslint-disable-next-line no-use-before-define\n    shutdown();\n  }\n\n  let configObject = configurationFileOrObject;\n\n  if (typeof configObject === 'string') {\n    configObject = loadConfigurationFile(configurationFileOrObject);\n  }\n  debug(`Configuration is ${configObject}`);\n\n  configuration.configure(deepClone(configObject));\n\n  clustering.onMessage(sendLogEventToAppender);\n\n  enabled = true;\n\n  // eslint-disable-next-line no-use-before-define\n  return log4js;\n}\n\nfunction isConfigured() {\n  return enabled;\n}\n\nfunction recording() {\n  return recordingModule;\n}\n\n/**\n * This callback type is called `shutdownCallback` and is displayed as a global symbol.\n *\n * @callback shutdownCallback\n * @param {Error} [error]\n */\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @param {shutdownCallback} [callback] - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n */\nfunction shutdown(callback = () => {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('Invalid callback passed to shutdown');\n  }\n  debug('Shutdown called. Disabling all log writing.');\n  // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n  enabled = false;\n\n  // Clone out to maintain a reference\n  const appendersToCheck = Array.from(appenders.values());\n\n  // Reset immediately to prevent leaks\n  appenders.init();\n  categories.init();\n\n  // Count the number of shutdown functions\n  const shutdownFunctions = appendersToCheck.reduce(\n    (accum, next) => (next.shutdown ? accum + 1 : accum),\n    0\n  );\n  if (shutdownFunctions === 0) {\n    debug('No appenders with shutdown functions found.');\n    callback();\n  }\n\n  let completed = 0;\n  let error;\n  debug(`Found ${shutdownFunctions} appenders with shutdown functions.`);\n  function complete(err) {\n    error = error || err;\n    completed += 1;\n    debug(`Appender shutdowns complete: ${completed} / ${shutdownFunctions}`);\n    if (completed >= shutdownFunctions) {\n      debug('All shutdown functions completed.');\n      callback(error);\n    }\n  }\n\n  // Call each of the shutdown functions\n  appendersToCheck\n    .filter((a) => a.shutdown)\n    .forEach((a) => a.shutdown(complete));\n}\n\n/**\n * Get a logger instance.\n * @static\n * @param {string} [category=default]\n * @return {Logger} instance of logger for the category\n */\nfunction getLogger(category) {\n  if (!enabled) {\n    configure(\n      process.env.LOG4JS_CONFIG || {\n        appenders: { out: { type: 'stdout' } },\n        categories: { default: { appenders: ['out'], level: 'OFF' } },\n      }\n    );\n  }\n  return new Logger(category || 'default');\n}\n\n/**\n * @name log4js\n * @namespace Log4js\n * @property getLogger\n * @property configure\n * @property shutdown\n */\nconst log4js = {\n  getLogger,\n  configure,\n  isConfigured,\n  shutdown,\n  connectLogger,\n  levels,\n  addLayout: layouts.addLayout,\n  recording,\n};\n\nmodule.exports = log4js;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}