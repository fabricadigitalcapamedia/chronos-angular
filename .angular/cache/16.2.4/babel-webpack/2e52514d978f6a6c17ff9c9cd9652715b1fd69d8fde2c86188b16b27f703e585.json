{"ast":null,"code":"function maxFileSizeUnitTransform(maxLogSize) {\n  if (typeof maxLogSize === 'number' && Number.isInteger(maxLogSize)) {\n    return maxLogSize;\n  }\n  const units = {\n    K: 1024,\n    M: 1024 * 1024,\n    G: 1024 * 1024 * 1024\n  };\n  const validUnit = Object.keys(units);\n  const unit = maxLogSize.slice(-1).toLocaleUpperCase();\n  const value = maxLogSize.slice(0, -1).trim();\n  if (validUnit.indexOf(unit) < 0 || !Number.isInteger(Number(value))) {\n    throw Error(`maxLogSize: \"${maxLogSize}\" is invalid`);\n  } else {\n    return value * units[unit];\n  }\n}\nfunction adapter(configAdapter, config) {\n  const newConfig = Object.assign({}, config); // eslint-disable-line prefer-object-spread\n  Object.keys(configAdapter).forEach(key => {\n    if (newConfig[key]) {\n      newConfig[key] = configAdapter[key](config[key]);\n    }\n  });\n  return newConfig;\n}\nfunction fileAppenderAdapter(config) {\n  const configAdapter = {\n    maxLogSize: maxFileSizeUnitTransform\n  };\n  return adapter(configAdapter, config);\n}\nconst adapters = {\n  dateFile: fileAppenderAdapter,\n  file: fileAppenderAdapter,\n  fileSync: fileAppenderAdapter\n};\nmodule.exports.modifyConfig = config => adapters[config.type] ? adapters[config.type](config) : config;","map":{"version":3,"names":["maxFileSizeUnitTransform","maxLogSize","Number","isInteger","units","K","M","G","validUnit","Object","keys","unit","slice","toLocaleUpperCase","value","trim","indexOf","Error","adapter","configAdapter","config","newConfig","assign","forEach","key","fileAppenderAdapter","adapters","dateFile","file","fileSync","module","exports","modifyConfig","type"],"sources":["C:/Claro/chronos-angular/node_modules/log4js/lib/appenders/adapters.js"],"sourcesContent":["function maxFileSizeUnitTransform(maxLogSize) {\n  if (typeof maxLogSize === 'number' && Number.isInteger(maxLogSize)) {\n    return maxLogSize;\n  }\n\n  const units = {\n    K: 1024,\n    M: 1024 * 1024,\n    G: 1024 * 1024 * 1024,\n  };\n  const validUnit = Object.keys(units);\n  const unit = maxLogSize.slice(-1).toLocaleUpperCase();\n  const value = maxLogSize.slice(0, -1).trim();\n\n  if (validUnit.indexOf(unit) < 0 || !Number.isInteger(Number(value))) {\n    throw Error(`maxLogSize: \"${maxLogSize}\" is invalid`);\n  } else {\n    return value * units[unit];\n  }\n}\n\nfunction adapter(configAdapter, config) {\n  const newConfig = Object.assign({}, config); // eslint-disable-line prefer-object-spread\n  Object.keys(configAdapter).forEach((key) => {\n    if (newConfig[key]) {\n      newConfig[key] = configAdapter[key](config[key]);\n    }\n  });\n  return newConfig;\n}\n\nfunction fileAppenderAdapter(config) {\n  const configAdapter = {\n    maxLogSize: maxFileSizeUnitTransform,\n  };\n  return adapter(configAdapter, config);\n}\n\nconst adapters = {\n  dateFile: fileAppenderAdapter,\n  file: fileAppenderAdapter,\n  fileSync: fileAppenderAdapter,\n};\n\nmodule.exports.modifyConfig = (config) =>\n  adapters[config.type] ? adapters[config.type](config) : config;\n"],"mappings":"AAAA,SAASA,wBAAwBA,CAACC,UAAU,EAAE;EAC5C,IAAI,OAAOA,UAAU,KAAK,QAAQ,IAAIC,MAAM,CAACC,SAAS,CAACF,UAAU,CAAC,EAAE;IAClE,OAAOA,UAAU;EACnB;EAEA,MAAMG,KAAK,GAAG;IACZC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI,GAAG,IAAI;IACdC,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG;EACnB,CAAC;EACD,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC;EACpC,MAAMO,IAAI,GAAGV,UAAU,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACrD,MAAMC,KAAK,GAAGb,UAAU,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC;EAE5C,IAAIP,SAAS,CAACQ,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,IAAI,CAACT,MAAM,CAACC,SAAS,CAACD,MAAM,CAACY,KAAK,CAAC,CAAC,EAAE;IACnE,MAAMG,KAAK,CAAE,gBAAehB,UAAW,cAAa,CAAC;EACvD,CAAC,MAAM;IACL,OAAOa,KAAK,GAAGV,KAAK,CAACO,IAAI,CAAC;EAC5B;AACF;AAEA,SAASO,OAAOA,CAACC,aAAa,EAAEC,MAAM,EAAE;EACtC,MAAMC,SAAS,GAAGZ,MAAM,CAACa,MAAM,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC,CAAC,CAAC;EAC7CX,MAAM,CAACC,IAAI,CAACS,aAAa,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;IAC1C,IAAIH,SAAS,CAACG,GAAG,CAAC,EAAE;MAClBH,SAAS,CAACG,GAAG,CAAC,GAAGL,aAAa,CAACK,GAAG,CAAC,CAACJ,MAAM,CAACI,GAAG,CAAC,CAAC;IAClD;EACF,CAAC,CAAC;EACF,OAAOH,SAAS;AAClB;AAEA,SAASI,mBAAmBA,CAACL,MAAM,EAAE;EACnC,MAAMD,aAAa,GAAG;IACpBlB,UAAU,EAAED;EACd,CAAC;EACD,OAAOkB,OAAO,CAACC,aAAa,EAAEC,MAAM,CAAC;AACvC;AAEA,MAAMM,QAAQ,GAAG;EACfC,QAAQ,EAAEF,mBAAmB;EAC7BG,IAAI,EAAEH,mBAAmB;EACzBI,QAAQ,EAAEJ;AACZ,CAAC;AAEDK,MAAM,CAACC,OAAO,CAACC,YAAY,GAAIZ,MAAM,IACnCM,QAAQ,CAACN,MAAM,CAACa,IAAI,CAAC,GAAGP,QAAQ,CAACN,MAAM,CAACa,IAAI,CAAC,CAACb,MAAM,CAAC,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}