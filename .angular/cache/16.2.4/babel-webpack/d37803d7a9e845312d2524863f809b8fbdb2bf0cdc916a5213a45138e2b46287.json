{"ast":null,"code":"/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__statusCode\", \"_remoteAddress\", \"__headers\", \"_logging\"] }] */\n\nconst levels = require('./levels');\nconst DEFAULT_FORMAT = ':remote-addr - -' + ' \":method :url HTTP/:http-version\"' + ' :status :content-length \":referrer\"' + ' \":user-agent\"';\n\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = array => {\n    const a = array.concat();\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n        // eslint-disable-next-line eqeqeq\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1); // eslint-disable-line no-plusplus\n        }\n      }\n    }\n\n    return a;\n  };\n  const defaultTokens = [];\n  defaultTokens.push({\n    token: ':url',\n    replacement: getUrl(req)\n  });\n  defaultTokens.push({\n    token: ':protocol',\n    replacement: req.protocol\n  });\n  defaultTokens.push({\n    token: ':hostname',\n    replacement: req.hostname\n  });\n  defaultTokens.push({\n    token: ':method',\n    replacement: req.method\n  });\n  defaultTokens.push({\n    token: ':status',\n    replacement: res.__statusCode || res.statusCode\n  });\n  defaultTokens.push({\n    token: ':response-time',\n    replacement: res.responseTime\n  });\n  defaultTokens.push({\n    token: ':date',\n    replacement: new Date().toUTCString()\n  });\n  defaultTokens.push({\n    token: ':referrer',\n    replacement: req.headers.referer || req.headers.referrer || ''\n  });\n  defaultTokens.push({\n    token: ':http-version',\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`\n  });\n  defaultTokens.push({\n    token: ':remote-addr',\n    replacement: req.headers['x-forwarded-for'] || req.ip || req._remoteAddress || req.socket && (req.socket.remoteAddress || req.socket.socket && req.socket.socket.remoteAddress)\n  });\n  defaultTokens.push({\n    token: ':user-agent',\n    replacement: req.headers['user-agent']\n  });\n  defaultTokens.push({\n    token: ':content-length',\n    replacement: res.getHeader('content-length') || res.__headers && res.__headers['Content-Length'] || '-'\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    }\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return res.getHeader(field.toLowerCase()) || res.__headers && res.__headers[field];\n    }\n  });\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n  return str;\n}\n\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n  if (typeof nolog === 'string') {\n    regexp = new RegExp(nolog);\n  }\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map(reg => reg.source ? reg.source : reg);\n    regexp = new RegExp(regexpsAsStrings.join('|'));\n  }\n  return regexp;\n}\n\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n  if (ruleSet) {\n    const matchedRule = ruleSet.find(rule => {\n      let ruleMatched = false;\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n      return ruleMatched;\n    });\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n  return level;\n}\n\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs or function(req, res): boolean\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\nmodule.exports = function getLogger(logger4js, options) {\n  if (typeof options === 'string' || typeof options === 'function') {\n    options = {\n      format: options\n    };\n  } else {\n    options = options || {};\n  }\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n  return (req, res, next) => {\n    // mount safety\n    if (typeof req._logging !== 'undefined') return next();\n\n    // nologs\n    if (typeof options.nolog !== 'function') {\n      const nolog = createNoLogCondition(options.nolog);\n      if (nolog && nolog.test(req.originalUrl)) return next();\n    }\n    if (thisLogger.isLevelEnabled(level) || options.level === 'auto') {\n      const start = new Date();\n      const {\n        writeHead\n      } = res;\n\n      // flag as logging\n      req._logging = true;\n\n      // proxy for statusCode.\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      };\n\n      // hook on end request to emit the log entry of the HTTP request.\n      let finished = false;\n      const handler = () => {\n        if (finished) {\n          return;\n        }\n        finished = true;\n\n        // nologs\n        if (typeof options.nolog === 'function') {\n          if (options.nolog(req, res) === true) {\n            req._logging = false;\n            return;\n          }\n        }\n        res.responseTime = new Date() - start;\n        // status code response level handling\n        if (res.statusCode && options.level === 'auto') {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n        level = matchRules(res.statusCode, level, options.statusRules);\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n        if (options.context) thisLogger.addContext('res', res);\n        if (typeof fmt === 'function') {\n          const line = fmt(req, res, str => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n        if (options.context) thisLogger.removeContext('res');\n      };\n      res.on('end', handler);\n      res.on('finish', handler);\n      res.on('error', handler);\n      res.on('close', handler);\n    }\n\n    // ensure next gets always called\n    return next();\n  };\n};","map":{"version":3,"names":["levels","require","DEFAULT_FORMAT","getUrl","req","originalUrl","url","assembleTokens","res","customTokens","arrayUniqueTokens","array","a","concat","i","length","j","token","splice","defaultTokens","push","replacement","protocol","hostname","method","__statusCode","statusCode","responseTime","Date","toUTCString","headers","referer","referrer","httpVersionMajor","httpVersionMinor","ip","_remoteAddress","socket","remoteAddress","getHeader","__headers","_","field","toLowerCase","format","str","tokens","replace","createNoLogCondition","nolog","regexp","RegExp","Array","isArray","regexpsAsStrings","map","reg","source","join","matchRules","currentLevel","ruleSet","level","matchedRule","find","rule","ruleMatched","from","to","codes","indexOf","getLevel","module","exports","getLogger","logger4js","options","thisLogger","INFO","fmt","next","_logging","test","isLevelEnabled","start","writeHead","code","finished","handler","WARN","ERROR","statusRules","combinedTokens","context","addContext","line","log","removeContext","on"],"sources":["C:/Claro/chronos-angular/node_modules/log4js/lib/connect-logger.js"],"sourcesContent":["/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__statusCode\", \"_remoteAddress\", \"__headers\", \"_logging\"] }] */\n\nconst levels = require('./levels');\n\nconst DEFAULT_FORMAT =\n  ':remote-addr - -' +\n  ' \":method :url HTTP/:http-version\"' +\n  ' :status :content-length \":referrer\"' +\n  ' \":user-agent\"';\n\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = (array) => {\n    const a = array.concat();\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n        // eslint-disable-next-line eqeqeq\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1); // eslint-disable-line no-plusplus\n        }\n      }\n    }\n    return a;\n  };\n\n  const defaultTokens = [];\n  defaultTokens.push({ token: ':url', replacement: getUrl(req) });\n  defaultTokens.push({ token: ':protocol', replacement: req.protocol });\n  defaultTokens.push({ token: ':hostname', replacement: req.hostname });\n  defaultTokens.push({ token: ':method', replacement: req.method });\n  defaultTokens.push({\n    token: ':status',\n    replacement: res.__statusCode || res.statusCode,\n  });\n  defaultTokens.push({\n    token: ':response-time',\n    replacement: res.responseTime,\n  });\n  defaultTokens.push({ token: ':date', replacement: new Date().toUTCString() });\n  defaultTokens.push({\n    token: ':referrer',\n    replacement: req.headers.referer || req.headers.referrer || '',\n  });\n  defaultTokens.push({\n    token: ':http-version',\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`,\n  });\n  defaultTokens.push({\n    token: ':remote-addr',\n    replacement:\n      req.headers['x-forwarded-for'] ||\n      req.ip ||\n      req._remoteAddress ||\n      (req.socket &&\n        (req.socket.remoteAddress ||\n          (req.socket.socket && req.socket.socket.remoteAddress))),\n  });\n  defaultTokens.push({\n    token: ':user-agent',\n    replacement: req.headers['user-agent'],\n  });\n  defaultTokens.push({\n    token: ':content-length',\n    replacement:\n      res.getHeader('content-length') ||\n      (res.__headers && res.__headers['Content-Length']) ||\n      '-',\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    },\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return (\n        res.getHeader(field.toLowerCase()) ||\n        (res.__headers && res.__headers[field])\n      );\n    },\n  });\n\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n  return str;\n}\n\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n\n  if (typeof nolog === 'string') {\n    regexp = new RegExp(nolog);\n  }\n\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map((reg) =>\n      reg.source ? reg.source : reg\n    );\n    regexp = new RegExp(regexpsAsStrings.join('|'));\n  }\n\n  return regexp;\n}\n\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n\n  if (ruleSet) {\n    const matchedRule = ruleSet.find((rule) => {\n      let ruleMatched = false;\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n      return ruleMatched;\n    });\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n  return level;\n}\n\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs or function(req, res): boolean\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\nmodule.exports = function getLogger(logger4js, options) {\n  if (typeof options === 'string' || typeof options === 'function') {\n    options = { format: options };\n  } else {\n    options = options || {};\n  }\n\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n\n  return (req, res, next) => {\n    // mount safety\n    if (typeof req._logging !== 'undefined') return next();\n\n    // nologs\n    if (typeof options.nolog !== 'function') {\n      const nolog = createNoLogCondition(options.nolog);\n      if (nolog && nolog.test(req.originalUrl)) return next();\n    }\n\n    if (thisLogger.isLevelEnabled(level) || options.level === 'auto') {\n      const start = new Date();\n      const { writeHead } = res;\n\n      // flag as logging\n      req._logging = true;\n\n      // proxy for statusCode.\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      };\n\n      // hook on end request to emit the log entry of the HTTP request.\n      let finished = false;\n      const handler = () => {\n        if (finished) {\n          return;\n        }\n        finished = true;\n\n        // nologs\n        if (typeof options.nolog === 'function') {\n          if (options.nolog(req, res) === true) {\n            req._logging = false;\n            return;\n          }\n        }\n\n        res.responseTime = new Date() - start;\n        // status code response level handling\n        if (res.statusCode && options.level === 'auto') {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n        level = matchRules(res.statusCode, level, options.statusRules);\n\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n\n        if (options.context) thisLogger.addContext('res', res);\n        if (typeof fmt === 'function') {\n          const line = fmt(req, res, (str) => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n        if (options.context) thisLogger.removeContext('res');\n      };\n      res.on('end', handler);\n      res.on('finish', handler);\n      res.on('error', handler);\n      res.on('close', handler);\n    }\n\n    // ensure next gets always called\n    return next();\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}