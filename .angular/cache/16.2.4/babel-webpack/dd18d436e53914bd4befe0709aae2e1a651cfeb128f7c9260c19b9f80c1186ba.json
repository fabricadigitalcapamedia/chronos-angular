{"ast":null,"code":"const path = require('path');\nconst debug = require('debug')('log4js:appenders');\nconst configuration = require('../configuration');\nconst clustering = require('../clustering');\nconst levels = require('../levels');\nconst layouts = require('../layouts');\nconst adapters = require('./adapters');\n\n// pre-load the core appenders so that webpack can find them\nconst coreAppenders = new Map();\ncoreAppenders.set('console', require('./console'));\ncoreAppenders.set('stdout', require('./stdout'));\ncoreAppenders.set('stderr', require('./stderr'));\ncoreAppenders.set('logLevelFilter', require('./logLevelFilter'));\ncoreAppenders.set('categoryFilter', require('./categoryFilter'));\ncoreAppenders.set('noLogFilter', require('./noLogFilter'));\ncoreAppenders.set('file', require('./file'));\ncoreAppenders.set('dateFile', require('./dateFile'));\ncoreAppenders.set('fileSync', require('./fileSync'));\ncoreAppenders.set('tcp', require('./tcp'));\nconst appenders = new Map();\nconst tryLoading = (modulePath, config) => {\n  let resolvedPath;\n  try {\n    const modulePathCJS = `${modulePath}.cjs`;\n    resolvedPath = require.resolve(modulePathCJS);\n    debug('Loading module from ', modulePathCJS);\n  } catch (e) {\n    resolvedPath = modulePath;\n    debug('Loading module from ', modulePath);\n  }\n  try {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    return require(resolvedPath);\n  } catch (e) {\n    // if the module was found, and we still got an error, then raise it\n    configuration.throwExceptionIf(config, e.code !== 'MODULE_NOT_FOUND', `appender \"${modulePath}\" could not be loaded (error was: ${e})`);\n    return undefined;\n  }\n};\nconst loadAppenderModule = (type, config) => coreAppenders.get(type) || tryLoading(`./${type}`, config) || tryLoading(type, config) || require.main && require.main.filename && tryLoading(path.join(path.dirname(require.main.filename), type), config) || tryLoading(path.join(process.cwd(), type), config);\nconst appendersLoading = new Set();\nconst getAppender = (name, config) => {\n  if (appenders.has(name)) return appenders.get(name);\n  if (!config.appenders[name]) return false;\n  if (appendersLoading.has(name)) throw new Error(`Dependency loop detected for appender ${name}.`);\n  appendersLoading.add(name);\n  debug(`Creating appender ${name}`);\n  // eslint-disable-next-line no-use-before-define\n  const appender = createAppender(name, config);\n  appendersLoading.delete(name);\n  appenders.set(name, appender);\n  return appender;\n};\nconst createAppender = (name, config) => {\n  const appenderConfig = config.appenders[name];\n  const appenderModule = appenderConfig.type.configure ? appenderConfig.type : loadAppenderModule(appenderConfig.type, config);\n  configuration.throwExceptionIf(config, configuration.not(appenderModule), `appender \"${name}\" is not valid (type \"${appenderConfig.type}\" could not be found)`);\n  if (appenderModule.appender) {\n    process.emitWarning(`Appender ${appenderConfig.type} exports an appender function.`, 'DeprecationWarning', 'log4js-node-DEP0001');\n    debug('[log4js-node-DEP0001]', `DEPRECATION: Appender ${appenderConfig.type} exports an appender function.`);\n  }\n  if (appenderModule.shutdown) {\n    process.emitWarning(`Appender ${appenderConfig.type} exports a shutdown function.`, 'DeprecationWarning', 'log4js-node-DEP0002');\n    debug('[log4js-node-DEP0002]', `DEPRECATION: Appender ${appenderConfig.type} exports a shutdown function.`);\n  }\n  debug(`${name}: clustering.isMaster ? ${clustering.isMaster()}`);\n  debug(\n  // eslint-disable-next-line global-require\n  `${name}: appenderModule is ${require('util').inspect(appenderModule)}`);\n  return clustering.onlyOnMaster(() => {\n    debug(`calling appenderModule.configure for ${name} / ${appenderConfig.type}`);\n    return appenderModule.configure(adapters.modifyConfig(appenderConfig), layouts, appender => getAppender(appender, config), levels);\n  }, /* istanbul ignore next: fn never gets called by non-master yet needed to pass config validation */() => {});\n};\nconst setup = config => {\n  appenders.clear();\n  appendersLoading.clear();\n  if (!config) {\n    return;\n  }\n  const usedAppenders = [];\n  Object.values(config.categories).forEach(category => {\n    usedAppenders.push(...category.appenders);\n  });\n  Object.keys(config.appenders).forEach(name => {\n    // dodgy hard-coding of special case for tcp-server and multiprocess which may not have\n    // any categories associated with it, but needs to be started up anyway\n    if (usedAppenders.includes(name) || config.appenders[name].type === 'tcp-server' || config.appenders[name].type === 'multiprocess') {\n      getAppender(name, config);\n    }\n  });\n};\nconst init = () => {\n  setup();\n};\ninit();\nconfiguration.addListener(config => {\n  configuration.throwExceptionIf(config, configuration.not(configuration.anObject(config.appenders)), 'must have a property \"appenders\" of type object.');\n  const appenderNames = Object.keys(config.appenders);\n  configuration.throwExceptionIf(config, configuration.not(appenderNames.length), 'must define at least one appender.');\n  appenderNames.forEach(name => {\n    configuration.throwExceptionIf(config, configuration.not(config.appenders[name].type), `appender \"${name}\" is not valid (must be an object with property \"type\")`);\n  });\n});\nconfiguration.addListener(setup);\nmodule.exports = appenders;\nmodule.exports.init = init;","map":{"version":3,"names":["path","require","debug","configuration","clustering","levels","layouts","adapters","coreAppenders","Map","set","appenders","tryLoading","modulePath","config","resolvedPath","modulePathCJS","resolve","e","throwExceptionIf","code","undefined","loadAppenderModule","type","get","main","filename","join","dirname","process","cwd","appendersLoading","Set","getAppender","name","has","Error","add","appender","createAppender","delete","appenderConfig","appenderModule","configure","not","emitWarning","shutdown","isMaster","inspect","onlyOnMaster","modifyConfig","setup","clear","usedAppenders","Object","values","categories","forEach","category","push","keys","includes","init","addListener","anObject","appenderNames","length","module","exports"],"sources":["C:/Claro/chronos-angular/node_modules/log4js/lib/appenders/index.js"],"sourcesContent":["const path = require('path');\nconst debug = require('debug')('log4js:appenders');\nconst configuration = require('../configuration');\nconst clustering = require('../clustering');\nconst levels = require('../levels');\nconst layouts = require('../layouts');\nconst adapters = require('./adapters');\n\n// pre-load the core appenders so that webpack can find them\nconst coreAppenders = new Map();\ncoreAppenders.set('console', require('./console'));\ncoreAppenders.set('stdout', require('./stdout'));\ncoreAppenders.set('stderr', require('./stderr'));\ncoreAppenders.set('logLevelFilter', require('./logLevelFilter'));\ncoreAppenders.set('categoryFilter', require('./categoryFilter'));\ncoreAppenders.set('noLogFilter', require('./noLogFilter'));\ncoreAppenders.set('file', require('./file'));\ncoreAppenders.set('dateFile', require('./dateFile'));\ncoreAppenders.set('fileSync', require('./fileSync'));\ncoreAppenders.set('tcp', require('./tcp'));\n\nconst appenders = new Map();\n\nconst tryLoading = (modulePath, config) => {\n  let resolvedPath;\n  try {\n    const modulePathCJS = `${modulePath}.cjs`;\n    resolvedPath = require.resolve(modulePathCJS);\n    debug('Loading module from ', modulePathCJS);\n  } catch (e) {\n    resolvedPath = modulePath;\n    debug('Loading module from ', modulePath);\n  }\n  try {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    return require(resolvedPath);\n  } catch (e) {\n    // if the module was found, and we still got an error, then raise it\n    configuration.throwExceptionIf(\n      config,\n      e.code !== 'MODULE_NOT_FOUND',\n      `appender \"${modulePath}\" could not be loaded (error was: ${e})`\n    );\n    return undefined;\n  }\n};\n\nconst loadAppenderModule = (type, config) =>\n  coreAppenders.get(type) ||\n  tryLoading(`./${type}`, config) ||\n  tryLoading(type, config) ||\n  (require.main &&\n    require.main.filename &&\n    tryLoading(path.join(path.dirname(require.main.filename), type), config)) ||\n  tryLoading(path.join(process.cwd(), type), config);\n\nconst appendersLoading = new Set();\n\nconst getAppender = (name, config) => {\n  if (appenders.has(name)) return appenders.get(name);\n  if (!config.appenders[name]) return false;\n  if (appendersLoading.has(name))\n    throw new Error(`Dependency loop detected for appender ${name}.`);\n  appendersLoading.add(name);\n\n  debug(`Creating appender ${name}`);\n  // eslint-disable-next-line no-use-before-define\n  const appender = createAppender(name, config);\n  appendersLoading.delete(name);\n  appenders.set(name, appender);\n  return appender;\n};\n\nconst createAppender = (name, config) => {\n  const appenderConfig = config.appenders[name];\n  const appenderModule = appenderConfig.type.configure\n    ? appenderConfig.type\n    : loadAppenderModule(appenderConfig.type, config);\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(appenderModule),\n    `appender \"${name}\" is not valid (type \"${appenderConfig.type}\" could not be found)`\n  );\n  if (appenderModule.appender) {\n    process.emitWarning(\n      `Appender ${appenderConfig.type} exports an appender function.`,\n      'DeprecationWarning',\n      'log4js-node-DEP0001'\n    );\n    debug(\n      '[log4js-node-DEP0001]',\n      `DEPRECATION: Appender ${appenderConfig.type} exports an appender function.`\n    );\n  }\n  if (appenderModule.shutdown) {\n    process.emitWarning(\n      `Appender ${appenderConfig.type} exports a shutdown function.`,\n      'DeprecationWarning',\n      'log4js-node-DEP0002'\n    );\n    debug(\n      '[log4js-node-DEP0002]',\n      `DEPRECATION: Appender ${appenderConfig.type} exports a shutdown function.`\n    );\n  }\n\n  debug(`${name}: clustering.isMaster ? ${clustering.isMaster()}`);\n  debug(\n    // eslint-disable-next-line global-require\n    `${name}: appenderModule is ${require('util').inspect(appenderModule)}`\n  );\n  return clustering.onlyOnMaster(\n    () => {\n      debug(\n        `calling appenderModule.configure for ${name} / ${appenderConfig.type}`\n      );\n      return appenderModule.configure(\n        adapters.modifyConfig(appenderConfig),\n        layouts,\n        (appender) => getAppender(appender, config),\n        levels\n      );\n    },\n    /* istanbul ignore next: fn never gets called by non-master yet needed to pass config validation */ () => {}\n  );\n};\n\nconst setup = (config) => {\n  appenders.clear();\n  appendersLoading.clear();\n  if (!config) {\n    return;\n  }\n\n  const usedAppenders = [];\n  Object.values(config.categories).forEach((category) => {\n    usedAppenders.push(...category.appenders);\n  });\n  Object.keys(config.appenders).forEach((name) => {\n    // dodgy hard-coding of special case for tcp-server and multiprocess which may not have\n    // any categories associated with it, but needs to be started up anyway\n    if (\n      usedAppenders.includes(name) ||\n      config.appenders[name].type === 'tcp-server' ||\n      config.appenders[name].type === 'multiprocess'\n    ) {\n      getAppender(name, config);\n    }\n  });\n};\n\nconst init = () => {\n  setup();\n};\ninit();\n\nconfiguration.addListener((config) => {\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(configuration.anObject(config.appenders)),\n    'must have a property \"appenders\" of type object.'\n  );\n  const appenderNames = Object.keys(config.appenders);\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(appenderNames.length),\n    'must define at least one appender.'\n  );\n\n  appenderNames.forEach((name) => {\n    configuration.throwExceptionIf(\n      config,\n      configuration.not(config.appenders[name].type),\n      `appender \"${name}\" is not valid (must be an object with property \"type\")`\n    );\n  });\n});\n\nconfiguration.addListener(setup);\n\nmodule.exports = appenders;\nmodule.exports.init = init;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}